# This workflow will install Python dependencies, run tests and lint with a variety of Python versions
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-python

name: Python package

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

# Only allow one workflow to run at once - given we need to create an index
# for each python-version (3x), we want to constrain how many indexes are
# needed for this project at any one time.
concurrency:
  group: build-and-test

jobs:
  build:

    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        python-version: ["3.9", "3.10", "3.11"]
        environment: ['serverless', 'pod']

    steps:
    - uses: actions/checkout@v4
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v5
      with:
        python-version: ${{ matrix.python-version }}
    - name: Install Poetry
      uses: snok/install-poetry@v1
      with:
        version: 1.8.1
        virtualenvs-create: true
        virtualenvs-in-project: true
        installer-parallel: true
    - name: Install dependencies
      run: |
        poetry install
    - name: Lint with flake8
      run: |
        # stop the build if there are Python syntax errors or undefined names
        poetry run flake8 . --extend-exclude .venv --count --select=E9,F63,F7,F82 --show-source --statistics
        # exit-zero treats all errors as warnings. The GitHub editor is 127 chars wide
        poetry run flake8 . --extend-exclude .venv --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics
    - name: Create test index
      id: create-index
      uses: ./.github/actions/create-index
      timeout-minutes: 2
      with:
        environment: ${{ matrix.environment == 'pod' && 'us-east4-gcp' || '' }}
        name_prefix: test-${{ github.run_number }}
        PINECONE_API_KEY: ${{ secrets.PINECONE_API_KEY }}
    - name: Test with pytest
      run: |
        poetry run pytest
      env:
        PINECONE_API_KEY: '${{ secrets.PINECONE_API_KEY }}'
        INDEX_HOST: ${{ steps.create-index.outputs.index_host }}
    - name: Delete test index
      if: always()
      uses: ./.github/actions/delete-index
      timeout-minutes: 2
      with:
        PINECONE_API_KEY: ${{ secrets.PINECONE_API_KEY }}
        index_name: ${{ steps.create-index.outputs.index_name }}

